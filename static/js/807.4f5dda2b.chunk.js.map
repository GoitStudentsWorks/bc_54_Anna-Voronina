{"version":3,"file":"static/js/807.4f5dda2b.chunk.js","mappings":"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","sources":["components/CustomSelect/CustomSelect.styled.js","components/CustomSelect/CustomSelect.jsx","hooks/categoriesFilter.js","components/Statistics/Chart/Chart.styled.js","components/Statistics/Chart/Chart.jsx","components/Statistics/Selects/Selects.styled.js","components/Statistics/Selects/Selects.jsx","components/Statistics/DiagramTab.styled.js","components/Statistics/Table/Table.styled.js","components/Statistics/Table/Table.jsx","services/randomColor/randomColor.js","components/Statistics/DiagramTab.jsx","pages/SummaryPage/SummaryPage.jsx","redux/transaction/transactionSelectors.js","services/getDateNow.js"],"sourcesContent":["import styled from 'styled-components';\nimport { SlArrowDown } from 'react-icons/sl';\n\nconst breakpoints = {\n  tablet: `@media only screen and (min-width: 768px)`,\n  desktop: `@media only screen and (min-width: 1280px)`,\n};\n\nexport const selectStyles = {\n  control: styles => ({\n    ...styles,\n    width: '280px',\n    height: '50px',\n    padding: '12px 20px',\n    fontSize: '16px',\n    color: '#FBFBFB',\n    backgroundColor: 'rgba(74, 86, 226, 0.10)',\n    border: '1px solid rgba(255, 255, 255, 0.60)',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    [breakpoints.tablet]: {\n      width: '160px',\n    },\n    [breakpoints.desktop]: {\n      width: '182px',\n    },\n  }),\n  valueContainer: styles => ({ ...styles, padding: '0', margin: '0' }),\n  indicatorSeparator: styles => ({ ...styles, display: 'none' }),\n  dropdownIndicator: (styles, state) => ({\n    ...styles,\n    padding: '0',\n    transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n    transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n  }),\n  singleValue: styles => ({ ...styles, margin: '0', color: '#FBFBFB' }),\n  input: styles => ({ ...styles, padding: '0', margin: '0' }),\n  menu: styles => ({\n    ...styles,\n    top: '90%',\n    width: '280px',\n    height: '157px',\n    borderRadius: '8px',\n    background: `linear-gradient(\n      360deg,\n      rgba(83, 61, 186, 0.7) 0%,\n      rgba(80, 48, 154, 0.7) 35.94%,\n      rgba(106, 70, 165, 0.52) 61.04%,\n      rgba(133, 93, 175, 0.13) 100%\n    )`,\n    backdropFilter: `blur(50px)`,\n    overflow: 'auto',\n    [breakpoints.tablet]: {\n      width: '160px',\n    },\n    [breakpoints.desktop]: {\n      width: '182px',\n    },\n  }),\n  menuList: styles => ({\n    ...styles,\n    width: '280px',\n    height: '157px',\n    [breakpoints.tablet]: {\n      width: '160px',\n    },\n    [breakpoints.desktop]: {\n      width: '182px',\n    },\n    '::-webkit-scrollbar': {\n      width: '7px',\n      height: '0px',\n      borderRadius: '8px',\n    },\n    '::-webkit-scrollbar-track': {\n      backgroundColor: 'rgba(255, 255, 255, 0.10)',\n    },\n    '::-webkit-scrollbar-thumb': {\n      backgroundColor: '#734AEF',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#623F8B',\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    cursor: 'pointer',\n    color: state.isSelected ? '#FF868D' : null,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : null,\n    ':hover': {\n      color: '#FF868D',\n      backgroundColor: 'rgba(255, 255, 255, 0.10)',\n    },\n  }),\n};\n\nexport const selectStylesCategory = {\n  ...selectStyles,\n  container: styles => ({\n    ...styles,\n    width: '100%',\n  }),\n  control: styles => ({\n    ...styles,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    textAlign: 'left',\n    height: '35px',\n    padding: '8px',\n    fontSize: '18px',\n    color: '#FBFBFB',\n    border: 0,\n    borderBottom: '1px solid rgba(255, 255, 255, 0.60)',\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n\n    cursor: 'pointer',\n  }),\n  menu: styles => ({\n    ...styles,\n    top: '90%',\n    width: '100%',\n    height: '300px',\n    borderRadius: '8px',\n    background: `linear-gradient(\n      360deg,\n      rgba(83, 61, 186, 0.7) 0%,\n      rgba(80, 48, 154, 0.7) 35.94%,\n      rgba(106, 70, 165, 0.52) 61.04%,\n      rgba(133, 93, 175, 0.13) 100%\n    )`,\n    backdropFilter: `blur(50px)`,\n    overflow: 'auto',\n  }),\n  menuList: styles => ({\n    ...styles,\n    width: '100%',\n    height: '300px',\n    '::-webkit-scrollbar': {\n      width: '7px',\n      height: '0px',\n      borderRadius: '8px',\n    },\n    '::-webkit-scrollbar-track': {\n      backgroundColor: 'rgba(255, 255, 255, 0.10)',\n    },\n    '::-webkit-scrollbar-thumb': {\n      backgroundColor: '#734AEF',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#623F8B',\n    },\n  }),\n};\n\nexport const SelectIcon = styled(SlArrowDown)`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  width: 30px;\n  height: 20px;\n`;\n","import Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\nimport {\n  SelectIcon,\n  selectStyles,\n  selectStylesCategory,\n} from './CustomSelect.styled';\n\nconst DropdownIndicator = props => {\n  return (\n    components.DropdownIndicator && (\n      <components.DropdownIndicator {...props}>\n        <SelectIcon />\n      </components.DropdownIndicator>\n    )\n  );\n};\n\nexport const CustomSelect = ({ options, onChange, nameOfSelect, defValue }) => {\n  return (\n    <>\n      {nameOfSelect === 'category' ? (\n        <Select\n          components={{ DropdownIndicator }}\n          defaultValue={defValue ? defValue : options[0]}\n          options={options}\n          styles={selectStylesCategory}\n          onChange={onChange}\n          name={nameOfSelect}\n        />\n      ) : (\n        <Select\n          components={{ DropdownIndicator }}\n          defaultValue={defValue ? defValue : options[0]}\n          options={options}\n          styles={selectStyles}\n          onChange={onChange}\n          name={nameOfSelect}\n        />\n      )}\n    </>\n  );\n};\n\nCustomSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  nameOfSelect: PropTypes.string.isRequired,\n  defValue: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n};\n","export const useCategoriesType = value => {\n  const expenseCategories = value.filter(\n    category => category.type === 'EXPENSE'\n  );\n  const incomeCategories = value.filter(category => category.type === 'INCOME');\n\n  return [expenseCategories, incomeCategories];\n};\n","import styled from 'styled-components';\nimport { LiaHryvniaSolid } from 'react-icons/lia';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 280px;\n  height: 280px;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  display: flex;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n`;\n\nexport const HrvnIcon = styled(LiaHryvniaSolid)`\n  width: 20px;\n  height: 20px;\n`;\n\n// export const StyledDonath = styled(Doughnut)`\n//   border-radius: 180px;\n\n//   background-color: red;\n//   box-shadow: 0px 4px 40px 0px rgba(0, 0, 0, 0.25),\n//     0px -3px 2px 0px rgba(0, 0, 0, 0.1);\n// `;\n","import PropTypes from 'prop-types';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { ChartWrapper, HrvnIcon, StyledSpan } from './Chart.styled';\nimport { useCategoriesType } from 'hooks/categoriesFilter';\nimport { useSelector } from 'react-redux';\nimport { selectPeriodTotal } from 'redux/transaction/transactionSelectors';\nimport { FcDonate } from 'react-icons/fc';\n\nexport const Chart = ({ colorStyle, resp }) => {\n  const [expenseCategories] = useCategoriesType(resp);\n  const periodTotal = useSelector(selectPeriodTotal);\n  ChartJS.register(ArcElement, Tooltip, Legend);\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        data: !expenseCategories.length\n          ? [1]\n          : expenseCategories.map(item => item.total),\n        backgroundColor: colorStyle,\n        borderColor: colorStyle,\n        borderWidth: 1,\n        borderJoinStyle: 'round',\n        borderAlign: 'inner',\n      },\n    ],\n  };\n  const options = {\n    cutout: '75%',\n  };\n  return (\n    <ChartWrapper>\n      {Number(periodTotal) === 0 ? (\n        <FcDonate style={{ width: '100%', height: '100%' }} />\n      ) : (\n        <>\n          <StyledSpan>\n            <HrvnIcon />\n            {Number(periodTotal).toFixed(2)}\n          </StyledSpan>\n          <Doughnut data={data} options={options} />\n        </>\n      )}\n    </ChartWrapper>\n  );\n};\n\nChart.propTypes = {\n  colorStyle: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resp: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['INCOME', 'EXPENSE']).isRequired,\n      total: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectWrapper = styled.div`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 32px;\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 16px;\n    margin-top: 0;\n  }\n\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n    flex-direction: row;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nimport { CustomSelect } from 'components/CustomSelect/CustomSelect';\nimport { StyledSelectWrapper } from './Selects.styled';\nimport { getMonthAndYear } from 'services/getDateNow';\n\nconst months = [\n  { value: 'January', label: 'January' },\n  { value: 'February', label: 'February' },\n  { value: 'March', label: 'March' },\n  { value: 'April', label: 'April' },\n  { value: 'May', label: 'May' },\n  { value: 'June', label: 'June' },\n  { value: 'July', label: 'July' },\n  { value: 'August', label: 'August' },\n  { value: 'September', label: 'September' },\n  { value: 'October', label: 'October' },\n  { value: 'November', label: 'November' },\n  { value: 'December', label: 'December' },\n];\n\nexport const Selects = ({ onChange }) => {\n  const [years, setYears] = useState([]);\n  const [data] = useState(getMonthAndYear());\n  const { month, year } = data;\n  const [selectMonth, setSelectMonth] = useState(month);\n  const [selectYear, setSelectYear] = useState(year);\n\n  const monthObject = months[+month - 1];\n  const yearObject = {\n    value: year,\n    label: year,\n  };\n\n  useEffect(() => {\n    for (let i = year; i > 2019; i -= 1) {\n      setYears(prev => [\n        ...prev,\n        {\n          value: i,\n          label: i,\n        },\n      ]);\n    }\n  }, [year]);\n\n  const handleChangeMonth = month => {\n    const dataMonth = new Date(`${month.value} 1`).getMonth() + 1;\n    setSelectMonth(dataMonth);\n    onChange({\n      month: dataMonth,\n      year: selectYear,\n    });\n  };\n  const handleChangeYear = year => {\n    const dataYear = Number(year.value);\n    setSelectYear(dataYear);\n    onChange({\n      month: selectMonth,\n      year: dataYear,\n    });\n  };\n\n  return (\n    <StyledSelectWrapper>\n      <CustomSelect\n        defValue={monthObject}\n        options={months}\n        nameOfSelect={'month'}\n        onChange={handleChangeMonth}\n      />\n      <CustomSelect\n        defValue={yearObject}\n        options={years}\n        nameOfSelect={'year'}\n        onChange={handleChangeYear}\n      />\n    </StyledSelectWrapper>\n  );\n};\n\nSelects.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: 32px;\n    padding: 0 0 15px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-start;\n    padding-left: 70px;\n    padding-right: 28px;\n  }\n`;\n\nexport const StyledWrapperLeft = styled.div``;\n\nexport const StyledWrapperRight = styled.div`\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTitle = styled.h1`\n  font-size: 30px;\n  font-weight: 400;\n  margin-left: 20px;\n  margin-top: 40px;\n  margin-bottom: 8px;\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 32px;\n    margin-left: 85px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WrapperTable = styled.table`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 20px;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const StyledThead = styled.thead`\n  tr {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 16px;\n  }\n\n  width: 280px;\n  height: 56px;\n  padding: 0 16px;\n\n  background: rgba(82, 59, 126, 0.6);\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n\n  border-radius: 8px;\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const StyledTbody = styled.tbody`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 16px 0;\n  gap: 14px;\n\n  tr {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.6);\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const StyledIcon = styled.td`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  margin-left: 16px;\n`;\nexport const StyledText = styled.td`\n  margin-left: 16px;\n  margin-right: auto;\n  font-size: 14px;\n`;\nexport const StyledSum = styled.td`\n  margin-right: 16px;\n  font-size: 14px;\n`;\n\nexport const StyledTotalWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 14px;\n  font-weight: 600px;\n  display: flex;\n  justify-content: space-between;\n  margin-left: 16px;\n`;\n\nexport const StyledSpanExpenses = styled.span`\n  color: #ff868d;\n  margin-right: 16px;\n`;\nexport const StyledSpanIncome = styled.span`\n  color: #ffb627;\n  margin-right: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  StyledIcon,\n  StyledP,\n  StyledSpanExpenses,\n  StyledSpanIncome,\n  StyledSum,\n  StyledTbody,\n  StyledText,\n  StyledThead,\n  StyledTotalWrapper,\n  WrapperTable,\n} from './Table.styled';\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from 'redux/transaction/transactionSelectors';\nimport { useCategoriesType } from 'hooks/categoriesFilter';\n\nexport const Table = ({ colorStyle, data }) => {\n  const [expenseCategories] = useCategoriesType(data);\n  const incomeSummary = useSelector(selectIncomeSummary);\n  const expenseSummary = useSelector(selectExpenseSummary);\n\n  return (\n    <>\n      <WrapperTable>\n        <StyledThead>\n          <tr>\n            <th>Category</th>\n            <th>Sum</th>\n          </tr>\n        </StyledThead>\n        <StyledTbody>\n          {expenseCategories.map((el, idx) => (\n            <tr key={el.name}>\n              <StyledIcon\n                style={{ backgroundColor: colorStyle[idx] }}\n              ></StyledIcon>\n              <StyledText>{el.name}</StyledText>\n              <StyledSum>{Number(el.total).toFixed(2) * -1}</StyledSum>\n            </tr>\n          ))}\n        </StyledTbody>\n      </WrapperTable>\n      <StyledTotalWrapper>\n        <StyledP>\n          Expenses:\n          <StyledSpanExpenses>\n            {Number(expenseSummary).toFixed(2) * -1}\n          </StyledSpanExpenses>\n        </StyledP>\n        <StyledP>\n          Income:\n          <StyledSpanIncome>\n            {Number(incomeSummary).toFixed(2)}\n          </StyledSpanIncome>\n        </StyledP>\n      </StyledTotalWrapper>\n    </>\n  );\n};\n\nTable.propTypes = {\n  colorStyle: PropTypes.arrayOf(PropTypes.string).isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['INCOME', 'EXPENSE']).isRequired,\n      total: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","// export function getRandomHexColor() {\n//   return `#${Math.floor(Math.random() * 16777215)\n//     .toString(16)\n//     .padStart(6, 0)}`;\n// }\nconst backgroundColor = [\n  '#FED057',\n  '#00AD84',\n  '#81E1FF',\n  '#C5BAFF',\n  '#6E78E8',\n  '#FFB627',\n  '#24CCA7',\n  '#FFD8D0',\n  '#FFD8D0',\n  '#6D1C77',\n\n  '#FD9498',\n\n  '#4A56E2',\n];\n\nexport const color = () => {\n  return backgroundColor.map(el => el);\n};\n","import { useEffect, useRef } from 'react';\nimport { Chart } from './Chart/Chart';\nimport { Selects } from './Selects/Selects';\nimport {\n  StyledTitle,\n  StyledWrapperLeft,\n  StyledWrapperRight,\n  Wrapper,\n} from './DiagramTab.styled';\nimport { Table } from './Table/Table';\nimport { getSummaryThunk } from 'redux/transaction/transactionOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoriesSummary } from 'redux/transaction/transactionSelectors';\nimport { color } from 'services/randomColor/randomColor';\nimport { getMonthAndYear } from 'services/getDateNow';\n\nexport const DiagramTab = () => {\n  const categorySummary = useSelector(selectCategoriesSummary);\n\n  const date = useRef(getMonthAndYear());\n  const dispatch = useDispatch();\n  const colors = color();\n\n  const getSelectData = value => {\n    dispatch(getSummaryThunk({ ...date.current, ...value }));\n  };\n\n  useEffect(() => {\n    dispatch(getSummaryThunk(date));\n  }, [dispatch]);\n\n  return (\n    <>\n      <StyledTitle>Statistics</StyledTitle>\n      <Wrapper>\n        <StyledWrapperLeft>\n          <Chart resp={categorySummary} colorStyle={colors} />\n        </StyledWrapperLeft>\n        <StyledWrapperRight>\n          <Selects onChange={getSelectData} />\n          <Table data={categorySummary} colorStyle={colors} />\n        </StyledWrapperRight>\n      </Wrapper>\n    </>\n  );\n};\n","import { DiagramTab } from 'components/Statistics/DiagramTab';\n\nconst SummaryPage = () => {\n  return (\n    <>\n      <DiagramTab />\n    </>\n  );\n};\n\nexport default SummaryPage;\n","export const selectTransactions = state => state.transaction.transactions;\nexport const selectCategories = state => state.transaction.categories;\nexport const selectCategoriesSummary = state =>\n  state.transaction.categoriesSummary;\nexport const selectIncomeSummary = state => state.transaction.incomeSummary;\nexport const selectExpenseSummary = state => state.transaction.expenseSummary;\nexport const selectPeriodTotal = state => state.transaction.periodTotal;\nexport const selectIsLoading = state => state.transaction.isLoading;\n","export const getMonthAndYear = () => {\n  return {\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n  };\n};\n\nexport const getDateForSort = isoDate => {\n  return Number(isoDate.split('-').join(''));\n};\n"],"names":["breakpoints","selectStyles","control","styles","width","height","padding","fontSize","color","backgroundColor","border","borderRadius","cursor","valueContainer","margin","indicatorSeparator","display","dropdownIndicator","state","transition","transform","selectProps","menuIsOpen","singleValue","input","menu","top","background","backdropFilter","overflow","menuList","option","isSelected","selectStylesCategory","container","justifyContent","textAlign","borderBottom","boxShadow","SelectIcon","styled","SlArrowDown","theme","colors","primaryFont","DropdownIndicator","props","components","c","CustomSelect","options","onChange","nameOfSelect","defValue","defaultValue","name","useCategoriesType","value","filter","category","type","ChartWrapper","StyledSpan","HrvnIcon","LiaHryvniaSolid","Chart","colorStyle","resp","expenseCategories","periodTotal","useSelector","selectPeriodTotal","ChartJS","ArcElement","Tooltip","Legend","data","labels","datasets","length","map","item","total","borderColor","borderWidth","borderJoinStyle","borderAlign","Number","style","toFixed","cutout","StyledSelectWrapper","months","label","Selects","useState","years","setYears","getMonthAndYear","month","year","selectMonth","setSelectMonth","selectYear","setSelectYear","monthObject","yearObject","useEffect","i","prev","dataMonth","Date","getMonth","dataYear","Wrapper","StyledWrapperLeft","StyledWrapperRight","StyledTitle","WrapperTable","StyledThead","StyledTbody","StyledIcon","StyledText","StyledSum","StyledTotalWrapper","StyledP","StyledSpanExpenses","StyledSpanIncome","Table","incomeSummary","selectIncomeSummary","expenseSummary","selectExpenseSummary","el","idx","DiagramTab","categorySummary","selectCategoriesSummary","date","useRef","dispatch","useDispatch","getSummaryThunk","current","selectTransactions","transaction","transactions","selectCategories","categories","categoriesSummary","getFullYear","getDateForSort","isoDate","split","join"],"sourceRoot":""}